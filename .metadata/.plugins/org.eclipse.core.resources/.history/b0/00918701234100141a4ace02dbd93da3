package com.example.pmalviya.customimagesearch.activities;

import java.util.ArrayList;

import org.apache.http.Header;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.GridView;
import android.widget.Toast;

import com.example.pmalviya.customimagesearch.R;
import com.example.pmalviya.customimagesearch.adapters.ImageResultsAdapter;
import com.example.pmalviya.customimagesearch.models.ImageResult;
import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.JsonHttpResponseHandler;


public class SearchActivity extends Activity {
	private EditText etQuery;
	private GridView gvResults;
	private String baseUrl = "https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=";
	private ArrayList<ImageResult> imageResults;
	private ImageResultsAdapter aImageResults;
	
	AsyncHttpClient client = new AsyncHttpClient();
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_search);
        setupViews();
        imageResults = new ArrayList<ImageResult>();
        aImageResults = new ImageResultsAdapter(this, imageResults);
        
        gvResults.setAdapter(aImageResults);
    }
    
    public void setupViews(){
    	etQuery  = (EditText) findViewById(R.id.etQuery);
    	gvResults  = (GridView) findViewById(R.id.gvResults);
    	gvResults.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				Intent i = new Intent(SearchActivity.this, ImageDisplayActivity.class);
				ImageResult result = imageResults.get(position);
				i.putExtra("result", result);
				startActivity(i);
				
				
			}
		});
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.search_settings, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    // Event Listener for Image search button
    public void onImageSearch(View v){
    	String query =  etQuery.getText().toString();
    	String searchUrl = baseUrl + query + "&rsz=8";
    	client.get(searchUrl , new JsonHttpResponseHandler(){

			@Override
			public void onFailure(int statusCode, Header[] headers, String responseString, Throwable throwable) {
				Toast.makeText(getApplicationContext(), "Failed due to" + responseString, Toast.LENGTH_SHORT).show();
			}

			@Override
			public void onSuccess(int statusCode, Header[] headers, JSONObject response) {
				JSONArray imageResultsJSON = null;
				try {
					imageResultsJSON= response.getJSONObject("responseData").getJSONArray("results");
					imageResults.clear(); // clear the results everytime search button is clicked
					
					// change the results directlt in the adapter,
					// it also changes the underlying data structure
					aImageResults.addAll(ImageResult.fromJSONArray(imageResultsJSON));
					
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
 
    	});
    }
}
